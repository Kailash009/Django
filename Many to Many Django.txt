Many to Many Relationship:-
--------------------------------------------------
Student -> Many Course 
Couse -> Many Student
--------------------------------------------------
class Student(models.Model):
    name=models.CharField(max_length=50)
    age=models.IntegerField()
    mobileno=models.CharField(max_length=18)
    dob=models.DateField(null=True,blank=True)
    pic=models.ImageField(null=True,blank=True)
    created_date=models.DateTimeField(auto_now_add=True)
    last_modifed_date=models.DateTimeField(auto_now=True)
    def __str__(self):
        return self.name

class Course(models.Model):
    name=models.CharField(max_length=50)
    students=models.ManyToManyField(Student,null=True,blank=True)
    def __str__(self):
        return self.name
------------------------------------------------------------------------------------------------------
c=Course()
c.name='Python'
c.save()
-----------------------------------------------------------
or 
Course.create(name='Php')
-----------------------------------------------------------------
(InteractiveConsole)
>>> from SMS.models import Course
>>> c=Course()
>>> c.name='Python' 
>>> c.save()
>>> c1=Course()
>>> c1.name='Dot Net' 
>>> c1.save()
>>> c2=Course()
>>> c2.name='Java' 
>>> c2.save()
>>> c3=Course()
>>> c3.name='React' 
>>> c3.save()
>>> c4=Course()
>>> c4.name='Angular' 
>>> c4.save()
-------------------------------------------------------------------------------------
s1 -> Jeewan jena     -> Java
s2 -> amit                  ->  Java
---------------------------------------------------
s1=Student.objects.get(id=1) -> 
s1.name  ->>  jeewan
s2=Student.objects.get(id=4) ->
s2.name ->  amit
----------------------------------------------
c=Course.objects.get(id=3)
c.name -> Java
c.students.add(s1,s2)  ->Here we assign two student Java course.
---------------------------------------------------
c.name -> Java
id     cid      sid
-----------------------------
1       3        1         
2       3        4
3       5        2
4       5        4
5       4        3
6       1        1
7       1        3
8       1        4
-----------------------------
nikhil -2   -> angular -5
amit - 4
---------------------------------------------------
aryan -> 3
react -> 4
-------------------------
python  -> 1
jeewan 1 ,aryan 3,amit 4
---------------------------------------------
How many students enroll in java course-
-------------------------------------------------------------------
c=Course.objects.get(id=3)
c.name -> java
alls=c.students.all()
alls   -> QuerySet
------------------------------------------------------------------
>>> from SMS.models import Course
>>> c=Course()
>>> c.name='Python' 
>>> c.save()
>>> c1=Course()
>>> c1.name='Dot Net' 
>>> c1.save()
>>> c2=Course()
>>> c2.name='Java' 
>>> c2.save()
>>> c3=Course()
>>> c3.name='React' 
>>> c3.save()
>>> c4=Course()
>>> c4.name='Angular' 
>>> c4.save()
>>> from SMS.models import *
>>> s1=Student.objects.get(id=1) 
>>> s1.name
'jeewan jena'
>>> s2=Student.objects.get(id=4) 
>>> s2.name
'amit'
>>> c=Course.objects.get(id=3) 
>>> c.name
'Java'
>>> c.students.add(s1,s2) 
>>> s2.name
'amit'
>>> s1=Student.objects.get(id=2) 
>>> s1.name
'nikhil'
>>> c=Course.objects.get(id=5) 
>>> c.name
'Angular'
>>> c.students.add(s1,s2) 
>>> s1=Student.objects.get(id=3) 
>>> s1.name
'aryan'
>>> c=Course.objects.get(id=4) 
>>> c.name
'React'
>>> c.students.add(s1) 
>>> s1.name
'aryan'
>>> s2=Student.objects.get(id=1) 
>>> s2.name
'jeewan jena'
>>> s3=Student.objects.get(id=4) 
>>> s3.name
'amit'
>>> c=Course.objects.get(id=1) 
>>> c.name
'Python'
>>> c.students.add(s1,s2,s3)
>>> c=Course.objects.get(id=3)
>>> c.name
'Java'
>>> alls=c.students.all()
>>> alls
<QuerySet [<Student: jeewan jena>, <Student: amit>]>
>>> len(alls)
2
>>> c=Course.objects.get(id=1)
>>> c.name
'Python'
>>> alls=c.students.all()
>>> alls
<QuerySet [<Student: jeewan jena>, <Student: aryan>, <Student: amit>]>
>>> len(alls)
3
-------------------------------------------------------------------------------------------------------------
d1 = {1:'Apple', 2:'Mango','ram':'Graphes'}
d1['ram']='Graphes'
-----------------------------------------
from django.db import models

# Create your models here.

class Student(models.Model):
    name=models.CharField(max_length=50)
    age=models.IntegerField()
    mobileno=models.CharField(max_length=18)
    dob=models.DateField(null=True,blank=True)
    pic=models.ImageField(null=True,blank=True)
    created_date=models.DateTimeField(auto_now_add=True)
    last_modifed_date=models.DateTimeField(auto_now=True)
    def __str__(self):
        return self.name

class Course(models.Model):
    name=models.CharField(max_length=50)
    students=models.ManyToManyField(Student,null=True,blank=True)
    def __str__(self):
        return self.name

class PaymentDetails(models.Model):
    amount=models.IntegerField()
    payment_mode=models.CharField(max_length=100,choices=[('Debit Card','Debit Card'),('Credit Card','Credit Card'),('Cash','Cash'),('PayTM','PayTM')])
    payment_date=models.DateTimeField(null=True,blank=True,auto_now=True)
    student=models.ForeignKey(Student,null=False,blank=False,on_delete=models.CASCADE)
-------------------------------------------------------------------------------------------------------------------------------------------
from django.shortcuts import render
from SMS.models import *
# Create your views here.
def view_payment_details(request):
    d1={}
    if request.method=='GET':
        resp=render(request,'SMS/payment.html')
        return resp
    elif request.method=='POST':
        try:
            sid=int(request.POST.get('txtid',0))
            stu=Student.objects.get(id=sid)
            allp=stu.paymentdetails_set.all()
            d1={'payments':allp,'stu':stu}
            resp=render(request,'SMS/payment.html',context=d1)
            return resp
        except Student.DoesNotExist:
            d1['msg']="Payment Doesn't Exist"
            resp=render(request,'SMS/payment.html',context=d1)
            return resp


def view_course_wise_student_details(request):
    allc=Course.objects.all()
    d1={'courses':allc}
    if request.method=='GET':
        c=Course.objects.get(id=1)
        d1['cid']=c.id
        d1['cname']=c.name
        allstu=c.students.all()
        d1['students']=allstu
        resp=render(request,'SMS/course.html',context=d1)
        return resp
    elif request.method=='POST':
        cid=int(request.POST.get('courseslc',0))
        c=Course.objects.get(id=cid)
        d1['cid']=c.id
        d1['cname']=c.name
        allstu=c.students.all()
        d1['students']=allstu
        resp=render(request,'SMS/course.html',context=d1)
        return resp
----------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Courses</title>
</head>
<body  bgcolor="yellow">
    <form method="post">
        {% csrf_token %}
    <h1>****Course Wise Student Details****</h1>
    <label>Courses:</label>
    <select name="courseslc">
        {% for course in courses %}
        {% if  course.id ==  cid %}
     <option value="{{course.id}}" selected>{{course.name}}</option>
     {% else %}
     <option value="{{course.id}}">{{course.name}}</option>
     {% endif %}
     {% endfor %}
    </select>
    <button type="submit"> Show Student</button>
    <br/><br/>
    <h1>We Have Following Student of {{cname}} Given Below:</h1>
    <table border="3" bgcolor="pink">
        <tr>
            <th>S.No.</th>
            <th>Name</th>
            <th>Mobile No.</th>
            <th>Registration Date</th>
        </tr>
        {% for stu in students %}
        <tr>
            <td>{{forloop.counter}}</td>
            <td>{{stu.name}}</td>
            <td>{{stu.mobileno}}</td>
            <td>{{stu.created_date}}</td>
        </tr>
        {% empty %}
        <tr>
            <td colspan="4"><h1 style="color:red;"> No Student Found !! </h1></td>
        </tr>
        {% endfor %}
    </table>
</form>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------------
from django.urls import path
from .views import *
#Base URL => http://127.0.0.1:8000/sms/


urlpatterns = [

    path('payment/',view_payment_details),
    path('course/',view_course_wise_student_details)
    
]
----------------------------------------------------------------------------------------------------------------------


























































































