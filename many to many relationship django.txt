---------------------------------------------------
Many to Many Relationship:-
-------------------------------------------------------
Student  - Course
1 S => Many Courses.
1 C => Many Student.
--------------------------------------------------------------
class Course(models.Model):
    name=models.CharField(max_length=100)
    students=models.ManyToManyField(Student,null=True,blank=True)  # Many to Many Relationship.
    def __str__(self):
        return self.name
---------------------------------------------------------------------------------------
Course:-
-------------------
c=Course()
c.name='Java'
c.save()
-------------------------------------
(InteractiveConsole)
>>> from SMS.models import *
>>> c=Course()
>>> c.name='Java' 
>>> c.save()
>>> c1=Course()
>>> c1.name='Dot Net' 
>>> c1.save()
>>> c3=Course()
>>> c3.name='Python' 
>>> c3.save()
>>> c4=Course()
>>> c4.name='Angular' 
>>> c4.save()
>>> c4.name='React' 
>>> c4.save()
>>> c4.name='Angular' 
>>> c4.save()
-----------------------------------------------------------------------------------------------
subhajit -> java, angular
-----------------------------------------------
id   cid      sid
---------------------------
1     1         1 
2     4         1
3     3         2
4     3         4
5     3         6
6     1         4
7     2         2
8     4         2
9     3          7
10    4         7
--------------------------------------------------------------------------------------------
waq to assign subjajit student enrolled in java and angular.
s1=Student.objects.get(id=1)
s1.name -> subhajit. 
c1=Course.objects.get(id=1)
c1.name -> java
c1.students.add(s1) -> assign java course to subhajit.-
---------------------------------------------------------------------------------------
subham (2),ravi pratap(4),amit(6) -> python (3) 
ravi -> 
subh 2 -> dot 2,an 4
pi (7) -> 3, 4
-----------------------------------------------------------------------------------------
(InteractiveConsole)
>>> from SMS.models import *
>>> c=Course()
>>> c.name='Java' 
>>> c.save()
>>> c1=Course()
>>> c1.name='Dot Net' 
>>> c1.save()
>>> c3=Course()
>>> c3.name='Python' 
>>> c3.save()
>>> c4=Course()
>>> c4.name='Angular' 
>>> c4.save()
>>> c4.name='React' 
>>> c4.save()
>>> c4.name='Angular' 
>>> c4.save()
>>> s1=Student.objects.get(id=1) 
>>> s1.name
'subhajit saha'
>>> c1=Course.objects.get(id=1) 
>>> c1.name
'Java'
>>> c1.students.add(s1)
>>> c1=Course.objects.get(id=4) 
>>> c1.name
'Angular'
>>> c1.students.add(s1) 
>>> s1=Student.objects.get(id=2) 
>>> s1.name
'subham'
>>> s2=Student.objects.get(id=4) 
>>> s2.name
'ravi pratap'
>>> s1.name
'subham'
>>> s3=Student.objects.get(id=6) 
>>> s3.name
'Amit'
>>> s1.name
'subham'
>>> s2.name
'ravi pratap'
>>> c1=Course.objects.get(id=3) 
>>> c1.name
'Python'
>>> c1.students.add(s1,s2,s3) 
>>> c1=Course.objects.get(id=1) 
>>> c1.name
'Java'
>>> c1.students.add(s2) 
>>> s1.name
'subham'
>>> c1=Course.objects.get(id=2) 
>>> c1.name
'Dot Net'
>>> c1.students.add(s1) 
>>> c1=Course.objects.get(id=4) 
>>> c1.name
'Angular'
>>> c1.students.add(s1) 
>>> s3=Student.objects.get(id=7) 
>>> s3.name
'piyush'
>>> c1=Course.objects.get(id=3) 
>>> c1.name
'Python'
>>> c1.students.add(s3) 
>>> c1=Course.objects.get(id=4) 
>>> c1.students.add(s3) 
------------------------------------------------------------------------------------------------------------
How to Find Course Wise Student Details:-
------------------------------------------------------------------------------------------------
Course - Student:-
--------------------------------------------------------------------------------------------
waq to find no. of student enrolled in dot net course.
c=Course.objects.get(id=2)
c.id -- 2
c.name -- 'dot net'
c.students.all()   ->> 'QuerySet'
----------------------------------------------------------------------------------------
>>> c=Course.objects.get(id=2) 
>>> c.id  
2
>>> c.name
'Dot Net'
>>> c.students.all()
<QuerySet [<Student: subham>]>
>>> c=Course.objects.get(id=1) 
>>> c.name
'Java'
>>> c.students.all()
<QuerySet [<Student: subhajit saha>, <Student: ravi pratap>]>
>>> allstu=c.students.all() 
>>> allstu
<QuerySet [<Student: subhajit saha>, <Student: ravi pratap>]>
>>> len(allstu) 
2
>>> print(type(allstu)) 
<class 'django.db.models.query.QuerySet'>
-----------------------------------------------------------------------------------------------------
Dynamic DropDown Binding:-
----------------------------------------------------------
def view_course_wise_student_details(request):
    if request.method=='GET':
        allc=Course.objects.all()
        d1={'courses':allc}
        resp=render(request,'SMS/student.html',context=d1)
        return resp
    elif request.method=='POST':
        pass
----------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Details</title>
</head>
<body bgcolor="lime">
    <form method="post">
        {% csrf_token %}
    <h1>*** COURSE WISE STUDENT DETAILS *** </h1>
    Course Name:
    <select>
        {% for course in courses %}
        <option value="{{course.id}}">{{course.name}}</option>
        {% endfor %}
    </select>
    <button type="submit">Show Student Details</button>
    <br/><br/>

    <table border="3" bgcolor="yellow">
        <tr>
            <th>S.No.</th>
            <th>NAME</th>
            <th>COURSE NAME</th>
            <th>MOBILE NO.</th>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </table>
</form>
</body>
</html>
--------------------------------------------------------------------------------
from django.urls import path
from .views import *

#BASE URL => http://127.0.0.1:8000/sms/

urlpatterns = [
    path('payment/',view_payment_details),
    path('student/',view_course_wise_student_details),
]
------------------------------------------------------------------------------------






































































